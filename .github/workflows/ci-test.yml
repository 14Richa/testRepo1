name: Welcome New Contributor

on:
  pull_request:
    types: [closed]
    paths:
      - 'MAINTAINERS.yaml'
env:
      GH_TOKEN: ${{ secrets.BOT_TOKEN }}
jobs:
  welcome:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v2
        with:
          ref: main
          path: testRepo-main

      - name: Checkout one commit before last one
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          ref: main
          path: testRepo

      - run: cd testRepo && git checkout HEAD^

      - name: Install dependencies
        run: npm install js-yaml@4.1.0

      - name: Compare files
        id: compare-files
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const yaml = require('js-yaml');

            const main_file = yaml.load(fs.readFileSync('./testRepo-main/MAINTAINERS.yaml', 'utf8'));
            const pr_file = yaml.load(fs.readFileSync('./testRepo/MAINTAINERS.yaml', 'utf8'));

            const removed = pr_file.filter(
              (newObj) => !main_file.some((oldObj) => oldObj.github === newObj.github)
            );
            const added = main_file.filter(
              (oldObj) => !pr_file.some((newObj) => newObj.github === oldObj.github)
            );

            if (added.length > 0) {
              core.setOutput("newMaintainers", added.map((obj) => obj.github).join(","));
            }
            if (removed.length > 0) {
              core.setOutput("removedMaintainers", removed.map((obj) => obj.github).join(","));
            }

            core.info('Maintainers in main branch:\n' + yaml.dump(main_file));
            core.info('Location of Maintainers in main branch:');
            core.info(fs.realpathSync('./testRepo-main/MAINTAINERS.yaml'));
            core.info('Maintainers in PR branch:\n' + yaml.dump(pr_file));
            core.info('Location of Maintainers in PR branch:');
            core.info(fs.realpathSync('./testRepo/MAINTAINERS.yaml'));

      - name: Debug newMaintainers output
        run: |
          echo "newMaintainers = ${{ steps.compare-files.outputs.newMaintainers }}"
    outputs:
      newMaintainers: ${{ steps.compare-files.outputs.newMaintainers }}
      removedMaintainers: ${{ steps.compare-files.outputs.removedMaintainers }}


  add_maintainer:
    needs: welcome
    if: needs.welcome.outputs.newMaintainers != ''
    runs-on: ubuntu-latest
    steps:
      - name: Invite new maintainers to the organization
        uses: actions/github-script@v6
        with: 
          script: |
            const { execSync } = require('child_process');
            const newMaintainers = '${{ needs.welcome.outputs.newMaintainers }}'.split(',');
            const token = process.env.GH_TOKEN; // Default token
  
            for (const maintainer of newMaintainers) {
              execSync(`gh api -X PUT /orgs/richaOrg/memberships/${maintainer} -H "Authorization: token ${token}"`);
            }
  
      - name: Add new maintainers to the team
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            const newMaintainers = '${{ needs.welcome.outputs.newMaintainers }}'.split(',');
            const token = process.env.GH_TOKEN; // Default token

            for (const maintainer of newMaintainers) {
              execSync(`gh api -X PUT orgs/richaOrg/teams/maintainers/memberships/${maintainer} -H "Authorization: token ${token}"`);
            }

    outputs:
      newMaintainers: ${{ needs.welcome.outputs.newMaintainers }}


  display_message:
    needs: add_maintainer
    if: needs.add_maintainer.outputs.newMaintainers != ''
    runs-on: ubuntu-latest
    steps:
      - name: Display welcome message
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            const newMaintainers = "${{ needs.add_maintainer.outputs.newMaintainers }}".split(",");
            console.log(`New maintainers: ${newMaintainers}`);
            const welcomeMessage = newMaintainers.map((maintainer) => `@${maintainer.trim().replace(/^@/, '')} I have invited you to join the AsyncAPI organization and you will soon be added to the team that lists all Maintainers.
            
            We use this team to mention in different discussions in different places in GitHub where Maintainer's opinion is needed or even voting on some topic. Once Maintainers are mentioned:
            
            - You get GitHub notification
            - We also drop notification in our slack in #95_bot-maintainers-mentioned channel
            - We drop an email to people that subscribed to Maintainer news here https://www.asyncapi.com/community/maintainers
            
            Pick the channel for notifications that you prefer. Welcome aboard! We are excited to have you as part of the team.`).join("\n");
            
            const { owner, repo } = context.repo;
            const { number: issue_number } = context.issue;
            return github.rest.issues.createComment({ owner, repo, issue_number, body: welcomeMessage });

  remove_maintainer:
    needs: welcome
    if: needs.welcome.outputs.removedMaintainers != ''
    runs-on: ubuntu-latest
    steps:
      - name: Remove maintainers from the organization
        run: |
          IFS=',' read -ra MAINTAINERS <<< "${{ needs.welcome.outputs.removedMaintainers }}"
          for MAINTAINER in "${MAINTAINERS[@]}"; do
            gh api -X DELETE /orgs/richaOrg/memberships/$MAINTAINER -H "Authorization: token $GH_TOKEN"
          done

      - name: Remove maintainers from the team
        run: |
          IFS=',' read -ra MAINTAINERS <<< "${{ needs.welcome.outputs.removedMaintainers }}"
          for MAINTAINER in "${MAINTAINERS[@]}"; do
            gh api orgs/richaOrg/teams/maintainers/memberships/$MAINTAINER -H "Authorization: token $GH_TOKEN" -X DELETE
          done

