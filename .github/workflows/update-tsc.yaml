name: TSC Management Workflow

on:
  pull_request:
    types: [closed]
    paths:
      - 'MAINTAINERS.yaml'

jobs:
  detect_tsc_changes:
    if: github.event.pull_request.merged
    name: Update TSC Member
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v2
        with:
          ref: main
          path: testRepo-main

      - name: Checkout one commit before last one
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          ref: main
          path: testRepo

      - run: cd testRepo && git checkout HEAD^

      - name: Install js-yaml
        run: npm install js-yaml@4.1.0

      - name: Compare files
        id: compare-files
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const yaml = require('js-yaml');
            
            console.log('Starting script...');
            
            const mainFile = yaml.load(fs.readFileSync('./testRepo-main/MAINTAINERS.yaml', 'utf8'));
            const prFile = yaml.load(fs.readFileSync('./testRepo/MAINTAINERS.yaml', 'utf8')); 
            
            // Log the loaded files for verification
            console.log('Loaded mainFile:', mainFile);
            console.log('Loaded prFile:', prFile);
            
            // Variables to store the updated value and GitHub user
            let updatedMaintainers = [];
            let updatedValue;

            // Function to check if isTscMember value has changed
            function hasIsTscMemberChanged(maintainerGithub) {
                const mainMaintainer = mainFile.find(m => m.github === maintainerGithub);
                const prMaintainer = prFile.find(m => m.github === maintainerGithub);
            
                console.log(`Checking for ${maintainerGithub}`);
            
                if (!mainMaintainer || !prMaintainer) {
                    console.error('Maintainer not found:', maintainerGithub);
                    return;
                }
            
                console.log(`${maintainerGithub} in mainFile has isTscMember as:`, mainMaintainer.isTscMember);
                console.log(`${maintainerGithub} in prFile has isTscMember as:`, prMaintainer.isTscMember);
            
                if (mainMaintainer.isTscMember !== prMaintainer.isTscMember) {
                    console.log(`isTscMember value changed for ${maintainerGithub}`);
                    updatedMaintainers.push({ githubUser: maintainerGithub, updatedValue: mainMaintainer.isTscMember });
                    updatedValue = mainMaintainer.isTscMember;
                }
            }

            // Loop over all maintainers and find the changes
            mainFile.forEach(maintainer => hasIsTscMemberChanged(maintainer.github));
            
            // Log final results
            console.log("Final updatedValue:", updatedValue);
            console.log("Final updatedMaintainers:", JSON.stringify(updatedMaintainers));
            
            // Set outputs
            core.setOutput("updatedValue", updatedValue);
            core.setOutput("updatedMaintainers", JSON.stringify(updatedMaintainers));
    outputs: 
      updatedValue: ${{ steps.compare-files.outputs.updatedValue }}
      updatedMaintainers: ${{ steps.compare-files.outputs.updatedMaintainers }}

  add_tsc_member:
    needs: detect_tsc_changes
    if: needs.detect_tsc_changes.outputs.updatedValue == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Add new TSC members to the team
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            async function addTscMembers() {  // Wrap the script in an asynchronous function
              const newTscMembers = '${{ needs.detect_tsc_changes.outputs.updatedMaintainers }}'.split(',');
              for (const tscMember of newTscMembers) {
                try {
                  await github.request('PUT /orgs/{org}/teams/{team_slug}/memberships/{username}', {
                    org: 'richaOrg',
                    team_slug: 'maintainers',
                    username: tscMember
                  });
                } catch (error) {
                  console.error(`Failed to add ${tscMember} to the team:`, error);
                }
              }
            }

            addTscMembers();
    outputs:
      newTscMember: ${{ needs.detect_tsc_changes.outputs.updatedMaintainers }}

  display_message:
    needs: add_tsc_member
    if: needs.add_tsc_member.outputs.newTscMember != ''
    runs-on: ubuntu-latest
    steps:
      - name: Display welcome message to new TSC members
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            const newTscMembers = "${{ needs.add_tsc_member.outputs.newTscMember }}".split(",");
            console.log(`New TSC members: ${newTscMembers}`);
            const welcomeMessage = newTscMembers.map((tscMember) => `@${tscMember.trim().replace(/^@/, '')}, welcome to the AsyncAPI Initiative's TSC!\n
            We value your expertise and look forward to collaborating with you.\n
            Feel free to engage in discussions and share your ideas with the TSC.\n
            If you have any questions, reach out on Slack or comment on this pull request.\n
            Congratulations, and let's make great things happen together!`).join("\n");
            
            const { owner, repo } = context.repo;
            const { number: issue_number } = context.issue;
            return github.rest.issues.createComment({ owner, repo, issue_number, body: welcomeMessage }); 

